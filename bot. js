require("dotenv").config();
const axios = require("axios");
const { exec } = require("child_process");
const { Bot } = require("node-telegram-bot-api");

const bot = new Bot(process.env.TELEGRAM_BOT_TOKEN, { polling: true });
const groupChatId = process.env.GROUP_CHAT_ID;
const geminiApiKey = process.env.GEMINI_API_KEY;
const youtube = require("./youtube");
const player = require("./player");

let lastRequestTime = Date.now();
let idleTimeout;

bot.on("message", async (msg) => {
  if (!msg.text || msg.chat.id !== parseInt(groupChatId)) return;

  const chatId = msg.chat.id;
  const messageText = msg.text.toLowerCase();
  const username = msg.from.username || "User";

  if (messageText.startsWith("/start")) {
    bot.sendMessage(chatId, "Hello! I'm your AI music bot.");
    return;
  }

  if (/skip|stop|pause|resume|next/i.test(messageText)) {
    bot.sendMessage(chatId, "Only the bot can control playback.");
    return;
  }

  lastRequestTime = Date.now();
  clearTimeout(idleTimeout);

  const songTitle = await youtube.getSuggestedSong(messageText);
  if (!songTitle) {
    bot.sendMessage(chatId, "Couldn't find a suitable song.");
    return;
  }

  const searchResults = await youtube.searchYouTube(songTitle);
  if (!searchResults.length) {
    bot.sendMessage(chatId, "No music found on YouTube.");
    return;
  }

  const { title, url } = searchResults[0];
  const confirmMessage = await bot.sendMessage(chatId, `Confirm playing: *${title}*?`, {
    parse_mode: "Markdown",
    reply_markup: {
      inline_keyboard: [[{ text: "Yes", callback_data: url }]],
    },
  });

  setTimeout(() => bot.deleteMessage(chatId, confirmMessage.message_id), 60000);
});

bot.on("callback_query", async (query) => {
  const url = query.data;
  bot.sendMessage(groupChatId, `ðŸŽ¶ Playing: ${url}`);
  player.play(url);
  bot.answerCallbackQuery(query.id);

  idleTimeout = setTimeout(() => {
    bot.sendMessage(groupChatId, "Leaving voice chat due to inactivity.");
    player.stop();
  }, 180000);
});

module.exports = bot;
